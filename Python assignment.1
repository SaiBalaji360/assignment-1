1 List - lists are used to store multiple
       items in a single variable
 Examples of list in python
 var = ["Geeks","for","Geeks"]
 Print(var)
 Output
 ["Geeks","for","Geeks"]
# creating a list
 List = [ ]
 Print("Blank list:")
 Print (list)
# creating a list of numbers
 List = [10,20,30]
 Print ("\n list of numbers:")
 Print (List)
 Output
 Blank list:
 []
 List of numbers:
 [10,20,30]
These are the examples of list

2 Dictionary - dictionary is a collection of
               keys values, used to store data 
               Values like a map
 Examples of dictionary
 Dict = {1: 'Geeks',2:'For',3:'Geeks'}
 Print (Dict)
 Output
 {1: 'Geeks',2:'For',3:'Geeks'}
 # creating a dictionary
 # with integer keys
 Dict = {1: 'Geeks',2:'For',3:'Geeks'}
 Print ("\nDictionary with the use of integer keys:")
 Print (Dict)
 # creating a dictionary
 # with mixedkeys
 Dict = {'Name':'Geeks',1:[1,2,3,4]}
 Print ("\nDictionary with the use of mixed keys:")
 Print (Dict)
 Output
 Dictionary with the use of integer keys
 {1: 'Geeks',2:'For',3:'Geeks'}
 Dictionary with the use of mixed keys
 {'Name':'Geeks',1:[1,2,3,4]}
3 Tuples - Tuple is a collection of python
           Objects much like a list. The
           Sequence of values stored in a 
           Tuple can be of any type and they
          Are indexed by integers
  Examples of Tuple
 # creating a Tuple
 # with the use of string
 Tuple1 = [1,2,3,4,5,6]
 Print ('Geeks','For')
 Print (\nTuple with the use of string)
 Print (Tuple1)
 # creating a Tuple
 # with the use of built-in function
 Tuple1 = Tuple('Geeks')
 Print ("\nTuple with the use of function: ")
 Print (Tuple1)
 Output
 Initial empty Tuple:
 ()
 Tuple with the use of string:
 ('Geeks','For')
 Tuple with the use of function:
 ('G','e','e','k','s')
 
4 working on negative slicing
  Negative slicing means reverse the string,
  List,or any iterable with an ordering
  It is similar to negative indexing. This
  Means you can start from the end of the
  Sequence
  Nums =  [1,2,3,4,5,6,7]
  Part =  nums[-4:-1]
  Print (part) 
  Output
   [4,5,6]
  
  Nums = [1,2,3,4,5,6,7]
  Part = nums[4:1:-1]
  Print (part)
  Output
  [5,4,3]
5 work on frozen set
   Frozen set creates an method of immutable
   Set object from an iterable. It is a
   Built in python function
  # converting Tuple to frozen set
  fnum = frozenset(nu)
 # printing empty frozenset object
   Print ("frozenset object is : ",fnum)
  Output
 Frozenset object is : frozenset() 

6 Negative indexing
  Negative indexing accesses items relative 
 to the end of the sequence. The index -1
 reads the last element, -2 the second 
 last

 nums = [ 1 , 2 , 3 , 4 ]
 last = nums[-1]
 second_last = nums[-2]
 print(last, second_last)
 Output
 4 3





 
